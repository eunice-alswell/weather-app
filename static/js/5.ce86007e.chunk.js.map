{"version":3,"sources":["Config.js","component/Forecast.js","pages/Home.js"],"names":["config","base","key","BASE","KEY","Forecast","useState","country","setCountry","city","setCity","weather","setWeather","search","axios","get","then","res","data","console","log","catch","error","className","Style","type","placeholder","value","onChange","e","target","onClick","location","name","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","current","observation_time","id","weather_descriptions","temperature","humidity","precip","wind_speed","Home"],"mappings":"wLAQeA,EAPA,CAEXC,KAAM,sCACNC,IAAK,oCCEHC,G,MAAOH,EAAOC,MACdG,EAAMJ,EAAOE,IAiHJG,MA/Gf,WAAqB,IAAD,EAEaC,mBAAS,IAFtB,mBAETC,EAFS,KAEDC,EAFC,OAGOF,mBAAS,IAHhB,mBAGTG,EAHS,KAGJC,EAHI,OAIcJ,mBAAS,MAJvB,mBAITK,EAJS,KAIAC,EAJA,KAMVC,EAAS,WAERN,GAAWE,GACVK,IAAMC,IAAN,UAAaZ,EAAb,uBAAgCC,EAAhC,kBAA6CG,EAA7C,YAAwDE,IACvDO,MAAK,SAACC,GACHT,EAAW,IACXE,EAAQ,IACRE,EAAWK,EAAIC,MACfC,QAAQC,IAAIH,EAAIC,SACjBG,OAAM,SAACC,GACNH,QAAQC,IAAIE,OAkBxB,OACI,qBAAKC,UAAY,OAAjB,SACI,iCACI,oBAAIC,MAAM,gCAAV,4CAEKb,EAsBG,gCAEI,sBAAKY,UAAW,aAAhB,UACI,uBACAE,KAAO,OACPF,UAAW,aACXG,YAAa,UACbC,MAAOpB,EACPqB,SAAY,SAACC,GAAD,OAAOrB,EAAWqB,EAAEC,OAAOH,UAGvC,uBACAF,KAAO,OACPC,YAAa,OACbH,UAAW,aACXI,MAAOlB,EACPmB,SAAY,SAAAC,GAAC,OAAInB,EAAQmB,EAAEC,OAAOH,UAGlC,wBAAQJ,UAAY,MAAMQ,QAAWlB,EAArC,uBAGJ,gCACI,sBAAKU,UAAU,eAAf,UACI,qBAAKA,UAAU,WAAf,mBAA8BZ,EAAQqB,SAASC,KAA/C,YAAuDtB,EAAQqB,SAASzB,WACxE,sBAAKgB,UAAU,OAAf,oBAhEZ,SAACW,GACjB,IAIIC,EAFO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAEzDD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EANS,CAAC,UAAW,WAAY,QAAS,QAAQ,MAAM,OAAO,OAAO,SAAU,YACpF,UAAW,WAAW,YAKHL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,aAAkBE,EAAlB,YAA0BE,EAA1B,YAAmCE,GAsDmBE,CAAY,IAAIC,MAA1C,aAAsDjC,EAAQkC,QAAQC,kBAAtE,OACA,qBAAKvB,UAAY,cAAcwB,GAAG,MAAlC,SAAyCpC,EAAQkC,QAAQG,0BAE7D,sBAAKzB,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACKZ,EAAQkC,QAAQI,YADrB,WAGA,gCACG,qBAAK1B,UAAU,cAAf,4BAA0CZ,EAAQkC,QAAQK,SAA1D,QACA,qBAAK3B,UAAU,cAAf,kCAAgDZ,EAAQkC,QAAQM,OAAhE,OACA,qBAAK5B,UAAU,cAAf,gCAA8CZ,EAAQkC,QAAQO,WAA9D,sBAxDf,sBAAK7B,UAAW,aAAhB,UACI,uBACAE,KAAO,OACPF,UAAW,aACXG,YAAa,UACbC,MAAOpB,EACPqB,SAAY,SAACC,GAAD,OAAOrB,EAAWqB,EAAEC,OAAOH,UAG3C,uBACAF,KAAO,OACPC,YAAa,OACbH,UAAW,aACXI,MAAOlB,EACPmB,SAAY,SAAAC,GAAC,OAAInB,EAAQmB,EAAEC,OAAOH,UAGlC,wBAAQJ,UAAY,MAAMQ,QAAWlB,EAArC,6BCvDTwC,UARf,WACI,OACI,8BACI,cAAC,EAAD","file":"static/js/5.ce86007e.chunk.js","sourcesContent":["\r\nconst config = {\r\n\r\n    base: 'http://api.weatherstack.com/current',\r\n    key: 'e0d488da01803f8308a3439d596881ab'\r\n\r\n}\r\n\r\nexport default config","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../Config'\r\nimport './home.css'\r\n\r\n\r\nconst BASE = config.base\r\nconst KEY = config.key\r\n\r\nfunction Forecast() {\r\n\r\n    const [country,setCountry] = useState('')\r\n    const [city,setCity] = useState('')\r\n    const [weather, setWeather] = useState(null)\r\n\r\n    const search = () =>{\r\n         \r\n        if(country && city){\r\n            axios.get(`${BASE}?access_key=${KEY}&query=${country},${city}`)\r\n            .then((res) => {\r\n                setCountry('');\r\n                setCity('');\r\n                setWeather(res.data);\r\n                console.log(res.data);\r\n            }).catch((error) =>{\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const dateBuilder = (d) =>{\r\n        let months = ['January', 'February', 'March', 'April','May','June','July','August', 'september',\r\n        'October', 'November','December']; \r\n        let days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','friday','saturday'];   \r\n        \r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return `${day}, ${date} ${month} ${year}`\r\n    }\r\n    return (\r\n        <div className = 'home'>\r\n            <main>\r\n                <h2 Style=\"color:white;text-align:center\"> Check the Weather of Any City</h2>\r\n                {\r\n                    !weather?(\r\n                        <div className= 'search-box'>\r\n                            <input\r\n                            type = 'text'\r\n                            className= 'search-bar'\r\n                            placeholder ='country'\r\n                            value={country}\r\n                            onChange = {(e) => setCountry(e.target.value)}\r\n                            />\r\n    \r\n                        <input\r\n                        type = 'text'\r\n                        placeholder ='city'\r\n                        className= 'search-bar'\r\n                        value={city}\r\n                        onChange = {e => setCity(e.target.value)}\r\n                        />\r\n\r\n                        <button className = 'btn' onClick = {search}>Search</button>\r\n                        </div>      \r\n                \r\n                    ):(\r\n                        <div>\r\n\r\n                            <div className= 'search-box'>\r\n                                <input\r\n                                type = 'text'\r\n                                className= 'search-bar'\r\n                                placeholder ='country'\r\n                                value={country}\r\n                                onChange = {(e) => setCountry(e.target.value)}\r\n                                />\r\n    \r\n                                <input\r\n                                type = 'text'\r\n                                placeholder ='city'\r\n                                className= 'search-bar'\r\n                                value={city}\r\n                                onChange = {e => setCity(e.target.value)}\r\n                                />\r\n\r\n                                <button className = 'btn' onClick = {search}>Search</button>\r\n                            </div>      \r\n\r\n                            <div>\r\n                                <div className='location-box'>\r\n                                    <div className='location'>{`${weather.location.name},${weather.location.country}`}</div>\r\n                                    <div className='date'>{`${dateBuilder(new Date())}, ${weather.current.observation_time}`} </div>\r\n                                    <div className = 'description' id='des'>{weather.current.weather_descriptions}</div>\r\n                                </div>\r\n                                <div className='weather-box'>\r\n                                    <div className='temp'>\r\n                                        {weather.current.temperature}Â°C\r\n                                    </div>\r\n                                    <div>\r\n                                       <div className='description'>{`Humidty: ${weather.current.humidity}% `}</div> \r\n                                       <div className='description'>{`Precipitation :${weather.current.precip}%`}</div> \r\n                                       <div className='description'>{`Wind speed : ${weather.current.wind_speed}Km/h`}</div> \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </main>        \r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Forecast\r\n","import React from 'react'\r\nimport Forecast from '../component/Forecast'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Forecast/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}